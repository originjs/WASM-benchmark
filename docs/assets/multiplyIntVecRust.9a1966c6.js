import{i as b}from"./__vite-wasm-helper.868871dd.js";var v=n=>b(n,"/WASM-benchmark/assets/multiplyIntVecRust.f495a965.wasm");const e=await v();let a=null;function w(){return(a===null||a.buffer!==e.memory.buffer)&&(a=new Uint32Array(e.memory.buffer)),a}let l=0;function u(n,m){const t=m(n.length*4);return w().set(n,t/4),l=n.length,t}let i=null;function g(){return(i===null||i.buffer!==e.memory.buffer)&&(i=new Int32Array(e.memory.buffer)),i}function h(n,m,t,o){try{var _=u(n,e.__wbindgen_malloc),c=l,y=u(m,e.__wbindgen_malloc),s=l,r=u(t,e.__wbindgen_malloc),f=l;e.multiply_int_vec(_,c,y,s,r,f,o)}finally{t.set(g().subarray(r/4,r/4+f)),e.__wbindgen_free(r,f*4)}}export{h as multiply_int_vec};
